<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>acloudyh&#39;s Blog</title>
  
  <subtitle>Stay hungry, Stay foolish</subtitle>
  <link href="https://acloudyh.github.io/atom.xml" rel="self"/>
  
  <link href="https://acloudyh.github.io/"/>
  <updated>2020-10-28T09:47:52.881Z</updated>
  <id>https://acloudyh.github.io/</id>
  
  <author>
    <name>acloudyh</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>fasterxml中string字符串转对象json格式单引号错误</title>
    <link href="https://acloudyh.github.io/2020/10/28/fasterxml%E4%B8%ADstring%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%AF%B9%E8%B1%A1json%E6%A0%BC%E5%BC%8F%E5%8D%95%E5%BC%95%E5%8F%B7%E9%94%99%E8%AF%AF/"/>
    <id>https://acloudyh.github.io/2020/10/28/fasterxml%E4%B8%ADstring%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%AF%B9%E8%B1%A1json%E6%A0%BC%E5%BC%8F%E5%8D%95%E5%BC%95%E5%8F%B7%E9%94%99%E8%AF%AF/</id>
    <published>2020-10-28T06:38:54.000Z</published>
    <updated>2020-10-28T09:47:52.881Z</updated>
    
    <content type="html"><![CDATA[<p>在处理fasterxml中string字符串转对象json格式，标准的json都是双引号 （” “）;由于数据是单引号(‘ ‘)格式。导致了如下报错，特此记录</p><p><strong>com.fasterxml.jackson.core.JsonParseException:  Unexpected character (‘s’ (code 115)): was     expecting double-quote to start field name</strong></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">com.fasterxml.jackson.databind.ObjectMapper </span><br><span class="line">mapper &#x3D; new ObjectMapper();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;增加这行配置</span><br><span class="line">&#x2F;&#x2F;允许使用单引号，默认是false </span><br><span class="line">mapper.configure(Feature.ALLOW_SINGLE_QUOTES, true);</span><br><span class="line"></span><br><span class="line">mapper.readValue(payload, bean.class);</span><br></pre></td></tr></table></figure><p>除了<strong>ALLOW_UNQUOTED_FIELD_NAMES，ALLOW_SINGLE_QUOTES</strong>还有其它的设置，有用到试试。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在处理fasterxml中string字符串转对象json格式，标准的json都是双引号 （” “）;由于数据是单引号(‘ ‘)格式。导致了如下报错，特此记录&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;com.fasterxml.jackson.core.JsonParseException:  Unexpected character (‘s’ (code 115)): was     expecting double-quote to start field name&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://acloudyh.github.io/categories/Java/"/>
    
    
    <category term="踩坑" scheme="https://acloudyh.github.io/tags/%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>mysql 5.7 返回json数据 中文乱码问题</title>
    <link href="https://acloudyh.github.io/2020/10/28/mysql-5-7-%E8%BF%94%E5%9B%9Ejson%E6%95%B0%E6%8D%AE-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>https://acloudyh.github.io/2020/10/28/mysql-5-7-%E8%BF%94%E5%9B%9Ejson%E6%95%B0%E6%8D%AE-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</id>
    <published>2020-10-28T06:38:35.000Z</published>
    <updated>2020-10-28T09:48:02.956Z</updated>
    
    <content type="html"><![CDATA[<p>mysql版本为5.7，通过navicat查看json格式的数据是正常显示，但是查询出来是乱码， 读取其他字段都是正常的，也没有特殊设置json格式的字符集</p><a id="more"></a><p>mysql驱动jdbc是这个版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;version&gt;5.1.36&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>查资料才发现要jdbc 5.1.40以上，<br>更新依赖解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;5.1.40&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;mysql版本为5.7，通过navicat查看json格式的数据是正常显示，但是查询出来是乱码， 读取其他字段都是正常的，也没有特殊设置json格式的字符集&lt;/p&gt;</summary>
    
    
    
    <category term="Mysql" scheme="https://acloudyh.github.io/categories/Mysql/"/>
    
    
    <category term="踩坑" scheme="https://acloudyh.github.io/tags/%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>springboot websocket 注入bean失败</title>
    <link href="https://acloudyh.github.io/2020/10/28/springboot-websocket-%E6%B3%A8%E5%85%A5bean%E5%A4%B1%E8%B4%A5/"/>
    <id>https://acloudyh.github.io/2020/10/28/springboot-websocket-%E6%B3%A8%E5%85%A5bean%E5%A4%B1%E8%B4%A5/</id>
    <published>2020-10-28T06:38:08.000Z</published>
    <updated>2020-10-28T09:50:32.814Z</updated>
    
    <content type="html"><![CDATA[<p>踩坑记录</p><a id="more"></a><p>第一种方式：将messageService 注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@ServerEndpoint(value &#x3D; &quot;&#x2F;websocket&quot;)</span><br><span class="line">@Component</span><br><span class="line">public class WebSocketServer &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;这里使用静态，让 service 属于类</span><br><span class="line">    public static MessageServiceImpl messageService;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 给类的service 注入</span><br><span class="line">     * spring管理的都是单例（singleton）和 websocket （多对象）相冲突</span><br><span class="line">     *</span><br><span class="line">     * @param messageService</span><br><span class="line">     *&#x2F;</span><br><span class="line">    @Autowired</span><br><span class="line">    public void setMessageService(MessageServiceImpl messageService) &#123;</span><br><span class="line">        WebSocketServer.messageService &#x3D; messageService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种方式<br>或者将</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@Autowired</span><br><span class="line">    public void setMessageService(MessageServiceImpl messageService) &#123;</span><br><span class="line">        WebSocketServer.messageService &#x3D; messageService;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>写在<strong>websocketConfig</strong>中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class WebSocketConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public ServerEndpointExporter serverEndpointExporter() &#123;</span><br><span class="line">        return new ServerEndpointExporter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     *手动注入一个全局变量</span><br><span class="line">     * @param messageService</span><br><span class="line">     *&#x2F;</span><br><span class="line">    @Autowired</span><br><span class="line">    public void setMessageService(MessageServiceImpl messageService) &#123;</span><br><span class="line">        WebSocketServer.messageService &#x3D; messageService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;踩坑记录&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://acloudyh.github.io/categories/Java/"/>
    
    
    <category term="踩坑" scheme="https://acloudyh.github.io/tags/%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 16.04  pptp搭建服务端和客户端</title>
    <link href="https://acloudyh.github.io/2020/10/28/ubuntu-16-04-pptp%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%92%8C%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    <id>https://acloudyh.github.io/2020/10/28/ubuntu-16-04-pptp%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%92%8C%E5%AE%A2%E6%88%B7%E7%AB%AF/</id>
    <published>2020-10-28T06:37:35.000Z</published>
    <updated>2020-10-28T06:37:35.214Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>flask 统一异常处理以及400 500页面</title>
    <link href="https://acloudyh.github.io/2020/10/28/flask-%E7%BB%9F%E4%B8%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E4%BB%A5%E5%8F%8A400-500%E9%A1%B5%E9%9D%A2/"/>
    <id>https://acloudyh.github.io/2020/10/28/flask-%E7%BB%9F%E4%B8%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E4%BB%A5%E5%8F%8A400-500%E9%A1%B5%E9%9D%A2/</id>
    <published>2020-10-28T06:37:16.000Z</published>
    <updated>2020-10-28T09:45:06.555Z</updated>
    
    <content type="html"><![CDATA[<h3 id="在flask中如何统一处理异常以及400-500页面"><a href="#在flask中如何统一处理异常以及400-500页面" class="headerlink" title="在flask中如何统一处理异常以及400 500页面"></a>在flask中如何统一处理异常以及400 500页面</h3><h4 id="异常类"><a href="#异常类" class="headerlink" title="异常类"></a>异常类</h4><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author  : Yang Hao</span></span><br><span class="line"><span class="comment"># File    : exception_common.py</span></span><br><span class="line"><span class="comment"># Software: PyCharm</span></span><br><span class="line"><span class="comment"># Time    : 2020/3/30 17:35</span></span><br><span class="line"><span class="comment"># Description:</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> jsonify, render_template</span><br><span class="line"><span class="keyword">from</span> app <span class="keyword">import</span> app</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExceptionCommon</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="comment"># 默认的返回码</span></span><br><span class="line">    status_code = <span class="number">400</span></span><br><span class="line">    <span class="comment"># 可以自己定义return_code</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, message=<span class="literal">None</span>, status_code=<span class="literal">None</span>, payload=<span class="literal">None</span></span>):</span></span><br><span class="line">        Exception.__init__(self)</span><br><span class="line">        self.message = message</span><br><span class="line">        <span class="keyword">if</span> status_code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            self.status_code = status_code</span><br><span class="line">        self.payload = payload</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 构造要返回的错误代码和错误信息的 dict</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">to_dict</span>(<span class="params">self</span>):</span></span><br><span class="line">        rv = <span class="built_in">dict</span>(self.payload <span class="keyword">or</span> ())</span><br><span class="line">        rv[<span class="string">&#x27;status_code&#x27;</span>] = self.status_code</span><br><span class="line">        rv[<span class="string">&#x27;message&#x27;</span>] = self.message</span><br><span class="line">        <span class="keyword">return</span> rv</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.errorhandler(ExceptionCommon)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_invalid_usage</span>(<span class="params">error</span>):</span></span><br><span class="line">    response = jsonify(error.to_dict())</span><br><span class="line">    response.status_code = error.status_code</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.errorhandler(500)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_500</span>(<span class="params">e</span>):</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;500.html&#x27;</span>), <span class="number">404</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.errorhandler(404)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_not_found</span>(<span class="params">e</span>):</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;404.html&#x27;</span>), <span class="number">404</span></span><br></pre></td></tr></table></figure><h4 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@auth.route(&#x27;/logout&#x27;, methods=(&#x27;GET&#x27;, &#x27;POST&#x27;))</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    注销登录,解除会话 logout_user()</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    xxx</span><br><span class="line">    <span class="keyword">raise</span> ExceptionCommon(<span class="string">&quot;错误原因&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&quot;auth.login&quot;</span>))</span><br></pre></td></tr></table></figure><h4 id="在整个web项目中使用"><a href="#在整个web项目中使用" class="headerlink" title="在整个web项目中使用"></a>在整个web项目中使用</h4><p>上述<code>@app.errorhandler</code>        这个errorhandler处理器注册在app上，只能对app使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.errorhandler(ExceptionCommon)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_invalid_usage</span>(<span class="params">error</span>):</span></span><br><span class="line">    response = jsonify(error.to_dict())</span><br><span class="line">    response.status_code = error.status_code</span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><p>修改为以下内容<code>@comm.app_errorhandler</code>需要注册comm的蓝本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@comm.app_errorhandler(ExceptionCommon)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_invalid_usage</span>(<span class="params">error</span>):</span></span><br><span class="line">    response = jsonify(error.to_dict())</span><br><span class="line">    response.status_code = error.status_code</span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;在flask中如何统一处理异常以及400-500页面&quot;&gt;&lt;a href=&quot;#在flask中如何统一处理异常以及400-500页面&quot; class=&quot;headerlink&quot; title=&quot;在flask中如何统一处理异常以及400 500页面&quot;&gt;&lt;/a&gt;在flask中如何统一处理异常以及400 500页面&lt;/h3&gt;&lt;h4 id=&quot;异常类&quot;&gt;&lt;a href=&quot;#异常类&quot; class=&quot;headerlink&quot; title=&quot;异常类&quot;&gt;&lt;/a&gt;异常类&lt;/h4&gt;</summary>
    
    
    
    <category term="Flask" scheme="https://acloudyh.github.io/categories/Flask/"/>
    
    
  </entry>
  
  <entry>
    <title>flask登陆之后跳转回原先的页面</title>
    <link href="https://acloudyh.github.io/2020/10/28/flask%E7%99%BB%E9%99%86%E4%B9%8B%E5%90%8E%E8%B7%B3%E8%BD%AC%E5%9B%9E%E5%8E%9F%E5%85%88%E7%9A%84%E9%A1%B5%E9%9D%A2/"/>
    <id>https://acloudyh.github.io/2020/10/28/flask%E7%99%BB%E9%99%86%E4%B9%8B%E5%90%8E%E8%B7%B3%E8%BD%AC%E5%9B%9E%E5%8E%9F%E5%85%88%E7%9A%84%E9%A1%B5%E9%9D%A2/</id>
    <published>2020-10-28T06:36:52.000Z</published>
    <updated>2020-10-28T09:49:03.155Z</updated>
    
    <content type="html"><![CDATA[<p>在使用Flask_login，使用装饰器@login_required时，如果没有登录，会跳转登录页面登陆之后不会返回原来的页面</p><a id="more"></a><ul><li><p>在登录函数中，redirect更换以下代码</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">next_page_url = request.args.get(<span class="string">&#x27;next&#x27;</span>)</span><br><span class="line"> <span class="comment"># 如果 next_page_url 为空，直接返回首页</span></span><br><span class="line"> <span class="keyword">if</span> <span class="keyword">not</span> next_page_url <span class="keyword">or</span> url_parse(next_page_url).netloc != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">     <span class="keyword">return</span> redirect(next_page_url(<span class="string">&#x27;首页&#x27;</span>))</span><br><span class="line"> <span class="keyword">else</span>:</span><br><span class="line">     <span class="keyword">return</span> redirect(next_page_url)</span><br></pre></td></tr></table></figure></li><li><p>html中也需要修改，在url_for中增加<code>next=request.args.next</code></p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form <span class="string">&quot; method=&quot;</span>POST<span class="string">&quot; action=&quot;</span>&#123;&#123;url_for(<span class="string">&#x27;auth.login&#x27;</span>,<span class="built_in">next</span>=request.args.<span class="built_in">next</span>)&#125;&#125;<span class="string">&quot;&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在使用Flask_login，使用装饰器@login_required时，如果没有登录，会跳转登录页面登陆之后不会返回原来的页面&lt;/p&gt;</summary>
    
    
    
    <category term="Flask" scheme="https://acloudyh.github.io/categories/Flask/"/>
    
    
    <category term="踩坑" scheme="https://acloudyh.github.io/tags/%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>macOS brew安装mongo遇见的一些坑和报错</title>
    <link href="https://acloudyh.github.io/2020/10/28/macOS-brew%E5%AE%89%E8%A3%85mongo%E9%81%87%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91%E5%92%8C%E6%8A%A5%E9%94%99/"/>
    <id>https://acloudyh.github.io/2020/10/28/macOS-brew%E5%AE%89%E8%A3%85mongo%E9%81%87%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91%E5%92%8C%E6%8A%A5%E9%94%99/</id>
    <published>2020-10-28T06:36:33.000Z</published>
    <updated>2020-10-28T06:36:33.595Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Ubuntu server 如何升级内核</title>
    <link href="https://acloudyh.github.io/2020/10/28/Ubuntu-server-%E5%A6%82%E4%BD%95%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/"/>
    <id>https://acloudyh.github.io/2020/10/28/Ubuntu-server-%E5%A6%82%E4%BD%95%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/</id>
    <published>2020-10-28T06:36:16.000Z</published>
    <updated>2020-10-28T09:39:12.643Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看目前内核"><a href="#查看目前内核" class="headerlink" title="查看目前内核"></a>查看目前内核</h3><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# uname -sr</span><br><span class="line">Linux 4.4.0-142-generic</span><br></pre></td></tr></table></figure></code></pre><h3 id="开始升级内核"><a href="#开始升级内核" class="headerlink" title="开始升级内核"></a>开始升级内核</h3> <a id="more"></a><p><a href="http://kernel.ubuntu.com/~kernel-ppa/mainline/">官网镜像</a><br>选择所需要的版本下载(<em>命令下载很慢，建议直接复制连接到浏览器中直接下载</em>);随便找个目录下载下列文件 </p><p><strong>64位版本</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget http:&#x2F;&#x2F;kernel.ubuntu.com&#x2F;~kernel-ppa&#x2F;mainline&#x2F;v4.10.1&#x2F;linux-headers-4.10.1-041001_4.10.1-041001.201702260735_all.deb </span><br><span class="line">&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><p>$ wget <a href="http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.1/linux-headers-4.10.1-041001-generic_4.10.1-041001.201702260735_amd64.deb">http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.1/linux-headers-4.10.1-041001-generic_4.10.1-041001.201702260735_amd64.deb</a> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#96;&#96;&#96;</span><br><span class="line">$ wget http:&#x2F;&#x2F;kernel.ubuntu.com&#x2F;~kernel-ppa&#x2F;mainline&#x2F;v4.10.1&#x2F;linux-image-4.10.1-041001-generic_4.10.1-041001.201702260735_amd64.deb </span><br></pre></td></tr></table></figure><p><strong>32位版本</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget http:&#x2F;&#x2F;kernel.ubuntu.com&#x2F;~kernel-ppa&#x2F;mainline&#x2F;v4.10.1&#x2F;linux-headers-4.10.1-041001_4.10.1-041001.201702260735_all.deb </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget http:&#x2F;&#x2F;kernel.ubuntu.com&#x2F;~kernel-ppa&#x2F;mainline&#x2F;v4.10.1&#x2F;linux-headers-4.10.1-041001-generic_4.10.1-041001.201702260735_i386.deb </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget http:&#x2F;&#x2F;kernel.ubuntu.com&#x2F;~kernel-ppa&#x2F;mainline&#x2F;v4.10.1&#x2F;linux-image-4.10.1-041001-generic_4.10.1-041001.201702260735_i386.deb</span><br></pre></td></tr></table></figure><h3 id="开始解压安装"><a href="#开始解压安装" class="headerlink" title="开始解压安装"></a>开始解压安装</h3><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dpkg -i *.deb</span><br></pre></td></tr></table></figure></code></pre><p>如下图</p><p><img src="https://res.cloudinary.com/dkptw3xiz/image/upload/v1603874217/ubuntu-server_hyrt7u.png"></p><p>安装完成后，重启服务器并验证是否更新新的内核</p><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# uname -sr</span><br><span class="line">Linux 4.10.1-041001-generic</span><br></pre></td></tr></table></figure></code></pre>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;查看目前内核&quot;&gt;&lt;a href=&quot;#查看目前内核&quot; class=&quot;headerlink&quot; title=&quot;查看目前内核&quot;&gt;&lt;/a&gt;查看目前内核&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root@ubuntu:~# uname -sr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Linux 4.4.0-142-generic&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;开始升级内核&quot;&gt;&lt;a href=&quot;#开始升级内核&quot; class=&quot;headerlink&quot; title=&quot;开始升级内核&quot;&gt;&lt;/a&gt;开始升级内核&lt;/h3&gt;</summary>
    
    
    
    <category term="Ubuntu" scheme="https://acloudyh.github.io/categories/Ubuntu/"/>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 16.04 使用root ssh登录</title>
    <link href="https://acloudyh.github.io/2020/10/28/Ubuntu-16-04-%E4%BD%BF%E7%94%A8root-ssh%E7%99%BB%E5%BD%95/"/>
    <id>https://acloudyh.github.io/2020/10/28/Ubuntu-16-04-%E4%BD%BF%E7%94%A8root-ssh%E7%99%BB%E5%BD%95/</id>
    <published>2020-10-28T06:36:05.000Z</published>
    <updated>2020-10-28T06:36:05.179Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 更换apt源、pip3源</title>
    <link href="https://acloudyh.github.io/2020/10/28/Ubuntu-%E6%9B%B4%E6%8D%A2apt%E6%BA%90%E3%80%81pip3%E6%BA%90/"/>
    <id>https://acloudyh.github.io/2020/10/28/Ubuntu-%E6%9B%B4%E6%8D%A2apt%E6%BA%90%E3%80%81pip3%E6%BA%90/</id>
    <published>2020-10-28T06:35:15.000Z</published>
    <updated>2020-10-28T06:35:15.772Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 自动挂载SD卡</title>
    <link href="https://acloudyh.github.io/2020/10/27/Ubuntu%20%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BDSD%E5%8D%A1/"/>
    <id>https://acloudyh.github.io/2020/10/27/Ubuntu%20%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BDSD%E5%8D%A1/</id>
    <published>2020-10-27T13:27:55.000Z</published>
    <updated>2020-10-28T06:30:31.230Z</updated>
    
    <content type="html"><![CDATA[<p>最近开发过程中遇见了一个问题，Ubuntu 16.04 自动挂载SD卡报错，<code>mounted filesystem with ordered data mode. Opts: (null)</code>以此记录一下</p><a id="more"></a><ol><li><p>查看分区</p> <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">root@ubuntu16:~<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">中间省略无关东西;主要是为了挂载 /dev/mmcblk0p1</span><br><span class="line"></span><br><span class="line">Disk /dev/mmcblk0: <span class="number">29.7</span> GiB, <span class="number">31914983424</span> bytes, <span class="number">62333952</span> sectors</span><br><span class="line">Units: sectors of <span class="number">1</span> * <span class="number">512</span> = <span class="number">512</span> bytes</span><br><span class="line">Sector size (logical/physical): <span class="number">512</span> bytes / <span class="number">512</span> bytes</span><br><span class="line">I/O size (minimum/optimal): <span class="number">512</span> bytes / <span class="number">512</span> bytes</span><br><span class="line">Disklabel <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: <span class="number">0</span>x00000000</span><br><span class="line"></span><br><span class="line">Device         Boot <span class="built_in">Start</span>      <span class="keyword">End</span>  Sectors  Size Id <span class="built_in">Type</span></span><br><span class="line">/dev/mmcblk0p1       <span class="number">2048</span> <span class="number">62333951</span> <span class="number">62331904</span> <span class="number">29.7</span>G <span class="number">83</span> Linux</span><br><span class="line">root@ubuntu16:~<span class="comment"># </span></span><br></pre></td></tr></table></figure><p> sd卡文件格式的原先是fat32位，由于内核是裁剪版，没有fsck.vfat 修复（如果有，可以直接修复），直接将其格式化成ext4 <code>记得备份里面内容</code></p></li><li><p>手动挂载SD卡（ 成功 ）</p> <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mount</span> /dev/mmcblk0p1 /mnt/sd/</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><figcaption><span>-h```查看挂载成功</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#96;&#96;&#96;powershell</span><br><span class="line">root@ubuntu16:~# df -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">ubi0:rootfs     437M  384M   54M  88% &#x2F;</span><br><span class="line">devtmpfs        121M     0  121M   0% &#x2F;dev</span><br><span class="line">tmpfs           122M     0  122M   0% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs           122M  1.7M  120M   2% &#x2F;run</span><br><span class="line">tmpfs           5.0M  4.0K  5.0M   1% &#x2F;run&#x2F;lock</span><br><span class="line">tmpfs           122M     0  122M   0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">&#x2F;dev&#x2F;mmcblk0p1   30G  153M   28G   1% &#x2F;mnt&#x2F;sd</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 手动挂载SD卡可以成功，但是自动挂载却失败了</p></li></ol><h3 id="以下自动挂载过程"><a href="#以下自动挂载过程" class="headerlink" title="以下自动挂载过程"></a>以下自动挂载过程</h3><ol><li><p>修改<code>/etc/fstab</code>文件（ 失败 ）</p> <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu16:~<span class="comment"># vim /etc/fstab </span></span><br><span class="line"><span class="comment"># &lt;file system&gt;   &lt;dir&gt;         &lt;type&gt;    &lt;options&gt;                          &lt;dump&gt; &lt;pass&gt;</span></span><br><span class="line">/dev/mmcblk0p2    /             ext4      defaults,noatime,errors=remount<span class="literal">-ro</span>   <span class="number">0</span>      <span class="number">1</span></span><br><span class="line">/dev/mmcblk0p1    /mnt/sd          ext4      defaults                             <span class="number">0</span>      <span class="number">0</span></span><br><span class="line">~                                                                                            </span><br></pre></td></tr></table></figure><p> 查看dmesg日志信息，报错如下（裁剪版，连syslog也没有）</p> <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">24987.953468</span>] EXT4<span class="literal">-fs</span> (mmcblk0p1): mounted filesystem with ordered <span class="keyword">data</span> mode. Opts: (null)</span><br><span class="line">[<span class="number">25051.864722</span>] EXT4<span class="literal">-fs</span> (mmcblk0p1): mounted filesystem with ordered <span class="keyword">data</span> mode. Opts: (null)</span><br><span class="line">[<span class="number">25327.264935</span>] EXT4<span class="literal">-fs</span> (mmcblk0p1): mounted filesystem with ordered <span class="keyword">data</span> mode. Opts: (null)</span><br><span class="line">[<span class="number">25392.234106</span>] EXT4<span class="literal">-fs</span> (mmcblk0p1): mounted filesystem with ordered <span class="keyword">data</span> mode. Opts: (null)</span><br><span class="line">[<span class="number">171378.249554</span>] EXT4<span class="literal">-fs</span> (mmcblk0p1): mounted filesystem with ordered <span class="keyword">data</span> mode. Opts: (null)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>修改<code>/etc/rc.local</code>文件（ 失败 ）<br> 加入以下内容</p> <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mount</span> /dev/mmcblk0p1 /mnt/sd</span><br></pre></td></tr></table></figure><p> 重启之后依然报上述错误</p></li><li><p>手动指定挂在文件类型（ 成功 ）</p> <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mount</span> <span class="literal">-t</span> ext4 /dev/mmcblk0p1 /mnt/sd</span><br></pre></td></tr></table></figure><p> 重启机器之后，<code>df -h</code>查看挂载成功</p></li></ol><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li>文件系统有问题，可以使用<code>fsck.XX</code>参数去修复</li><li>期间也尝试了在<code>/etc/fstab</code>使用UUID 来指定，依然报错</li><li>手动指定挂在文件类型<code>mount -t ext4 /dev/mmcblk0p1 /mnt/sd</code></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近开发过程中遇见了一个问题，Ubuntu 16.04 自动挂载SD卡报错，&lt;code&gt;mounted filesystem with ordered data mode. Opts: (null)&lt;/code&gt;以此记录一下&lt;/p&gt;</summary>
    
    
    
    <category term="Ubuntu" scheme="https://acloudyh.github.io/categories/Ubuntu/"/>
    
    
    <category term="Ubuntu挂载SD卡" scheme="https://acloudyh.github.io/tags/Ubuntu%E6%8C%82%E8%BD%BDSD%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>Nacos集群配置及Nginx反向代理</title>
    <link href="https://acloudyh.github.io/2020/10/27/Nacos%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%8F%8ANginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    <id>https://acloudyh.github.io/2020/10/27/Nacos%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E5%8F%8ANginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</id>
    <published>2020-10-27T12:57:19.000Z</published>
    <updated>2020-10-28T03:33:53.442Z</updated>
    
    <content type="html"><![CDATA[<p>Nacos集群配置以及Nginx反向代理的一些配置</p><a id="more"></a><h2 id="安装Nacos"><a href="#安装Nacos" class="headerlink" title="安装Nacos"></a>安装Nacos</h2><p><strong>前提是需要一个虚拟机，本文基于CentOS 7</strong></p><ol><li><p>下载Nacos</p><p> <a href="https://github.com/alibaba/nacos/releases/tag/1.3.2">下载地址</a></p></li><li><p>配置Nacos</p><ul><li><p>创建mynacos文件夹；将tar包解压到mynacos文件夹中</p></li><li><p>配置cluster.conf</p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> cluster.conf.example cluster.conf</span><br><span class="line">vim cluster.conf</span><br></pre></td></tr></table></figure></li><li><p>添加以下内容(根据自己的<strong>主机ip</strong>来填</p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">192.168</span>.<span class="number">81.129</span>:<span class="number">3333</span></span><br><span class="line"><span class="number">192.168</span>.<span class="number">81.129</span>:<span class="number">4444</span></span><br><span class="line"><span class="number">192.168</span>.<span class="number">81.129</span>:<span class="number">4444</span></span><br></pre></td></tr></table></figure><!-- more --></li><li><p>修改数据库文件,<strong>vim application.properties</strong></p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.platform=mysql</span><br><span class="line">db.num=<span class="number">1</span></span><br><span class="line">db.url.<span class="number">0</span>=jdbc:mysql://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">3306</span>/nacos_config?characterEncoding=utf8&amp;connectTimeout=<span class="number">1000</span>&amp;socketTimeout=<span class="number">3000</span>&amp;autoReconnect=true</span><br><span class="line">db.user=root</span><br><span class="line">db.password=<span class="number">6</span>yhn^YHN</span><br></pre></td></tr></table></figure></li><li><p>关闭防火墙或者开放端口（为了省事，我关闭了和防火墙）</p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure></li></ul></li></ol><ol start="3"><li><p>启动Nacos</p><p> <strong>TIPS：因为是一台机器，所以以多个实例来设置集群，以端口区分，需要启动三个nacos；如果是多台机器那就正常一个机器起一个nacos即可</strong></p><ul><li><p>复制<strong>startup.sh</strong></p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> startup.sh.bak startup<span class="literal">-3333</span>.sh</span><br><span class="line"><span class="built_in">cp</span> startup.sh.bak startup<span class="literal">-4444</span>.sh</span><br><span class="line"><span class="built_in">cp</span> startup.sh.bak startup<span class="literal">-5555</span>.sh</span><br></pre></td></tr></table></figure></li><li><p>修改<strong>vim startup-3333.sh</strong>（一个示例，4444和5555 都按照此修改）,增加-Dserver.port=3333启动时指定端口号</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># start</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$JAVA</span> <span class="variable">$</span>&#123;JAVA_OPT&#125;&quot;</span> &gt; <span class="variable">$</span>&#123;BASE_DIR&#125;/logs/start.out <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line">nohup <span class="variable">$JAVA</span> <span class="literal">-Dserver</span>.port=<span class="number">3333</span> <span class="variable">$</span>&#123;JAVA_OPT&#125; nacos.nacos &gt;&gt; <span class="variable">$</span>&#123;BASE_DIR&#125;/logs/start.out <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;nacos is starting，you can check the <span class="variable">$</span>&#123;BASE_DIR&#125;/logs/start.out&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>启动nacos</p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./startup<span class="literal">-3333</span>.sh</span><br><span class="line">./startup<span class="literal">-4444</span>.sh</span><br><span class="line">./startup<span class="literal">-5555</span>.sh</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p>贴个安装nginx教程，并且配置stream负载均衡 <a href="http://xiaohost.com/2754.html">转向网址</a></p><ol><li><p>配置Nginx</p><p> 由于我是yum安装的Nginx 配置文件 <strong>vim /etc/nginx/nginx.confg</strong></p><ul><li><p>设置upstream cluster</p></li><li><p>设置location根路径。<strong>proxy_pass <a href="http://cluster/">http://cluster</a>;</strong></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#gzip  on;</span><br><span class="line">upstream cluster&#123;</span><br><span class="line">    server 192.168.81.129:3333;</span><br><span class="line">    server 192.168.81.129:4444;</span><br><span class="line">    server 192.168.81.129:5555;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen       1111;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #charset koi8-r;</span><br><span class="line"></span><br><span class="line">    #access_log  logs&#x2F;host.access.log  main;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        root   html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;cluster;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>启动Nginx</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx.service</span><br></pre></td></tr></table></figure></li><li><p>登录查看<a href="http://192.168.81.129:1111/nacos/#/login">http://192.168.81.129:1111/nacos/#/login</a></p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;Nacos集群配置以及Nginx反向代理的一些配置&lt;/p&gt;</summary>
    
    
    
    <category term="Nacos配置" scheme="https://acloudyh.github.io/categories/Nacos%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Nacos集群配置" scheme="https://acloudyh.github.io/tags/Nacos%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE/"/>
    
    <category term="Nginx反向代理" scheme="https://acloudyh.github.io/tags/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>my-first-blog</title>
    <link href="https://acloudyh.github.io/2020/10/27/my-first-blog/"/>
    <id>https://acloudyh.github.io/2020/10/27/my-first-blog/</id>
    <published>2020-10-27T07:34:53.000Z</published>
    <updated>2020-10-27T09:29:17.408Z</updated>
    
    <content type="html"><![CDATA[<p>哒哒哒哒哒哒多</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;哒哒哒哒哒哒多&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
